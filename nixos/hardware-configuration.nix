# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/3725a917-625f-4499-a33a-24fb4bad8667";
      fsType = "ext4";
      options = [
        "rw"
      ];
    };

  fileSystems."/boot" =
    { 
      device = "/dev/disk/by-uuid/467E-3329";
      fsType = "vfat";
    };

  fileSystems."/home/benjmanxd/Documents" =
    {
      device = "/dev/disk/by-uuid/0019781d-3b9b-41a0-a371-02c773f79f0f";
      fsType = "ext4";
      options = [
        "rw"
      ];
    };

  fileSystems."/home/benjmanxd/External" =
    {
      device = "/dev/disk/by-uuid/174c31ba-e9d0-4550-8451-7a2857ee107b";
      fsType = "ext4";
      options = [
        "rw"
      ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  # hardware.graphics.enable = true;
  # hardware.nvidia = {
  #   modesetting.enable = true;
  #   powerManagement.finegrained = false;
  #   open = false;
  #   nvidiaSettings = true;
  #   package = config.boot.kernelPackages.nvidiaPackages.stable;
  #   prime = {
  #     offload = {
  #       enable = true;
  #       enableOffloadCmd = true;
  #     };
  #   };
  # };
}
